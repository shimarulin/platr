# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/platr
  docker:
    - image: circleci/node:10.17.0

cache_key_yarn: &cache_key_yarn
  yarn-packages-{{ checksum "yarn.lock" }}

cache_key_ssh: &cache_key_ssh
  ssh-keys-{{ .Revision }}

save_pkg: &save_pkg
  save_cache:
    name: Save Yarn Package Cache
    key: *cache_key_yarn
    paths:
      - ~/.cache/yarn

restore_pkg: &restore_pkg
  restore_cache:
    name: Restore Yarn Package Cache
    keys:
      - *cache_key_yarn

save_ssh: &save_ssh
  save_cache:
    name: Save SSH config
    key: *cache_key_ssh
    paths:
      - ~/.ssh

restore_ssh: &restore_ssh
  restore_cache:
    name: Restore SSH config
    key: *cache_key_ssh
    paths:
      - ~/.ssh

jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - *restore_pkg

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - *save_pkg
      - *save_ssh

      - persist_to_workspace:
          root: ~/platr
          paths: .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/platr

      - run:
          name: Run tests
          command: yarn lint

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/platr

      - *restore_ssh

      - run:
          name: Setup Git user name
          command: git config --global user.name "CircleCI"

      - run:
          name: Setup Git user name
          command: git config --global user.email "shimarulin@gmail.com"

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/platr/.npmrc

      - run:
          name: Publish packages
          command: npx lerna publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /feature.*/
                - /fix.*/
                - master

      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - /feature.*/
                - /fix.*/
                - master

      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
